// NK: Waveform

#ifndef _WAVEFORM_H
#define _WAVEFORM_H

#include <math.h>
#include "Globals.h"
#include "CKG.h"
#include "IEKG.h"
#include "NRUtil.h"
#include "GKG.h"
#include "NRLB.h"
#include "SWSH.h"
#include "GKTraj.h"
#include "GKInsp.h"
#include "Inspiral.h"
#include "Cosmology.h"

class Waveform {
 public:
  Waveform(const Real *params, Inspiral *ins);
  ~Waveform();

  const Real *pE;
  Inspiral *insp;
  Real norm;

  /* Flag to tell code how to apply cosmological corrections. If this is set to true, it is assumed that 
     the Inspiral was generated for a redshifted mass, M = M0 (1 + z). The time spacing at the detector
     is therefore the same as the inspiral time spacing, and the correct distance to use is the luminosity
     distance. If this flag is set to false, it is assumed that the Inspiral was specified using the intrinsic
     source mass. In that case, the time spacing at the detector must be redshifted relative to the time 
     spacing at the source and the appropriate distance to use is the proper distance to the source.*/
  bool UseRedShiftedMass;

  /* Function to change cosmology used for distance computation. */
  void ChangeCos(Real Hubb0, Real OmM, Real OmL);

  enum { COS_THETA_SKY,  /* Sky position angles, in ecliptic coordinate system */
	 PHI_SKY,
	 COS_THETA_SPIN, /* Angles describing direction of binary spin, in ecliptic coordinate system */
	 PHI_SPIN,
	 ORBIT_PHI0,     /* Initial phase in phi of the orbit. The x-axis is taken to lie in the 
			    plane generated by the spin vector and the line of sight to the source. */
	 SYSTEM_DP,      /* Proper distance to source, in Mpc. This need only be specified if the source 
			    is at zero redshift. Otherwise the waveform code computes the appropriate
			    redshift dependent distance to use. */
	 REDSHIFT,       /* Cosmological redshift of source. This is used to compute the appropriate 
			    distance and reshift the time if necessary. */
	 NUM_EXTRINSIC };

  int hpluscross(int Nmin, int Nmax, Real *hp, Real *hx);

  Real Dphi0,psi0_end,chi0_end,p_end,e_end,i_end;
  Real Dphi0st,psi0_st,chi0_st,p_st,e_st,i_st;
 
 private:
  Real rtthr,sinthsky,csthsky,phik,phis,csthk,sinthk,csinc,cphis,cphik,sphis,sphik;
  void ProjectQuadMomTensor(int Nmin, int Nmax, Real **QuadTensor);
  /* Cosmological parameters used to compute distances if necessary. These default to H0=70, OmegaM=0.3, 
     OmegaL=0.7, but can be changed using the function ChangeCos( ) if necssary. */
  Real H0, OmegaM, OmegaL;
  Cosmology *LCDM;
};

#endif
